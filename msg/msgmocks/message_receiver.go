// Code generated by mockery v2.33.0. DO NOT EDIT.

package msgmocks

import (
	context "context"

	msg "github.com/rezaAmiri123/edat/msg"
	mock "github.com/stretchr/testify/mock"
)

// MessageReceiver is an autogenerated mock type for the MessageReceiver type
type MessageReceiver struct {
	mock.Mock
}

// ReceiveMessage provides a mock function with given fields: _a0, _a1
func (_m *MessageReceiver) ReceiveMessage(_a0 context.Context, _a1 msg.Message) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, msg.Message) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMessageReceiver creates a new instance of MessageReceiver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessageReceiver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MessageReceiver {
	mock := &MessageReceiver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
